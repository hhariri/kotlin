== TestFunctionLiteral ==
class TestFunctionLiteral {
    val sum: (Int)->Int = { (x: Int) ->
        sum(x - 1) + x
    }
}
---------------------
{ (x: Int) -> sum(x - 1) + x }   <v0>   NEW()
=====================
== anonymous_0 ==
{ (x: Int) ->
        sum(x - 1) + x
    }
---------------------
sum              <v2>   NEW(<v1>)
x                <v3>   NEW()
1                <v4>   NEW()
x - 1            <v5>   NEW(<v3>, <v4>)
sum(x - 1)       <v6>   NEW(<v2>, <v5>)
x                <v7>   NEW()
sum(x - 1) + x   <v8>   NEW(<v6>, <v7>)
sum(x - 1) + x   <v8>   COPY
=====================
== A ==
open class A(val a: A)
---------------------
=====================
== TestObjectLiteral ==
class TestObjectLiteral {
    val obj: A = object: A(obj) {
        {
            val x = obj
        }
        fun foo() {
            val y = obj
        }
    }
}
---------------------
obj                                                            <v1>   NEW(<v0>)
obj                                                            <v3>   NEW(<v2>)
object: A(obj) { { val x = obj } fun foo() { val y = obj } }   <v4>   NEW()
=====================
== foo ==
fun foo() {
            val y = obj
        }
---------------------
obj   <v1>   NEW(<v0>)
=====================
== TestOther ==
class TestOther {
    val x: Int = x + 1
}
---------------------
x       <v1>   NEW(<v0>)
1       <v2>   NEW()
x + 1   <v3>   NEW(<v1>, <v2>)
=====================
